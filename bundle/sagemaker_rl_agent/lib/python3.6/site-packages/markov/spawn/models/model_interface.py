"""this module implement a abstract model"""

import abc

from geometry_msgs.msg import Pose
from typing import Optional


class ModelInterface(object, metaclass=abc.ABCMeta):
    """class for abstract model
    """
    @abc.abstractmethod
    def spawn(self, pose: Optional[Pose] = None, **kwargs) -> None:
        """spawn model in gazebo simulator

        Args:
            pose (Pose): model pose
            **kwargs: Arbitrary keyword arguments

        Raises:
            NotImplementedError
        """
        raise NotImplementedError('spawn is not implemented')

    @abc.abstractmethod
    def delete(self) -> None:
        """delete model from gazebo simulator

        Raises:
            NotImplementedError
        """
        raise NotImplementedError('delete is not implemented')
